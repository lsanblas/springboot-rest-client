openapi: 3.0.1
info:
  title: OpenApi specification
  description: OpenApi documentation for rest client examples
  termsOfService: Terms of service
  contact:
    name: Leonardo San Blas
    url: http://www.linkedin.com/in/leonardo-san-blas-sanchez-213405286
    email: leonardosanblas@gmail.com
  version: "1.0"
servers:
- url: http://localhost:8080
  description: Local ENV
paths:
  /api/v1/users/template:
    get:
      tags:
      - user-controller
      operationId: findAllTemplate
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /api/v1/users/template/{id}:
    get:
      tags:
      - user-controller
      operationId: findByIdTemplate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
  /api/v1/users/rest:
    get:
      tags:
      - user-controller
      operationId: findAllRest
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /api/v1/users/rest/{id}:
    get:
      tags:
      - user-controller
      operationId: findByIdRest
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
  /api/v1/users/http:
    get:
      tags:
      - user-controller
      operationId: findAllHttp
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /api/v1/users/http/{id}:
    get:
      tags:
      - user-controller
      operationId: findByIdHttp
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
components:
  schemas:
    Address:
      type: object
      properties:
        street:
          type: string
        suite:
          type: string
        city:
          type: string
        zipcode:
          type: string
        geo:
          $ref: "#/components/schemas/Geo"
    Company:
      type: object
      properties:
        name:
          type: string
        catchPhrase:
          type: string
        bs:
          type: string
    Geo:
      type: object
      properties:
        lat:
          type: string
        lng:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        username:
          type: string
        email:
          type: string
        address:
          $ref: "#/components/schemas/Address"
        phone:
          type: string
        website:
          type: string
        company:
          $ref: "#/components/schemas/Company"
